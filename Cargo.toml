[package]
name = "wasm_voronoi"
version = "0.1.0"
authors = ["raphi-web <73493970+raphi-web@users.noreply.github.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]
parallel = ["rayon", "wasm-bindgen-rayon"]

[dependencies]
wasm-bindgen = "0.2.63"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }
web-sys = { version = "0.3.39", features = ['console'] }
itertools = "0.10.5"
rayon = { version = "1.7.0", optional = true }
wasm-bindgen-rayon = { version = "1.0.3", optional = true }
voronoi = "0.1.4"
js-sys = "0.3.61"
voronoice = "0.2.0"


[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = 3




